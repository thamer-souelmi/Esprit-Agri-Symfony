{% extends 'prod.html.twig' %}

{% block title %}Investissementi{% endblock %}
{% block banner_image %}
    {{ asset('img/investissement.jpg') }}
{% endblock %}
{% block product_heading %}
    <h1 class="display-3 text-white mb-4 animated slideInDown">Investissement</h1>
{% endblock %}

{% block body %}
    
    <!-- Flash Messages -->
    {% for flash_message in app.flashes('success') %}
        <div id="flash-success" class="alert alert-success">
            {{ flash_message }}
        </div>
    {% endfor %}
    
    <!-- Flash Error Messages -->
    {% for flash_message in app.flashes('error') %}
        <div id="flash-error" class="alert alert-danger">
            {{ flash_message }}
        </div>
    {% endfor %}
    
{% include 'annonceinvestissement/flash_messages.html.twig' %}
<!-- TradingView Widget BEGIN -->
<div class="tradingview-widget-container">
  <div class="tradingview-widget-container__widget"></div>
  <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js" async>
  {
  "symbols": [
    {
      "proName": "FOREXCOM:SPXUSD",
      "title": "S&P 500"
    },
    {
      "proName": "FOREXCOM:NSXUSD",
      "title": "US 100"
    },
    {
      "proName": "FX_IDC:EURUSD",
      "title": "EUR to USD"
    },
    {
      "proName": "BITSTAMP:BTCUSD",
      "title": "Bitcoin"
    },
    {
      "proName": "BITSTAMP:ETHUSD",
      "title": "Ethereum"
    },
    {
      "description": "TND",
      "proName": "ECONOMICS:TNCORR"
    },
    {
      "description": "EXPORT",
      "proName": "ECONOMICS:TNEP"
    },
    {
      "description": "AGRI",
      "proName": "ECONOMICS:TNGDPA"
    },
    {
      "description": "EMPLOYE",
      "proName": "ECONOMICS:TNEMP"
    },
    {
      "description": "IMPORT",
      "proName": "ECONOMICS:TNIPRI"
    },
    {
      "description": "TAX",
      "proName": "ECONOMICS:TNCTR"
    },
    {
      "description": "INVEST",
      "proName": "ECONOMICS:TNFDI"
    },
    {
      "description": "INFLATION",
      "proName": "ECONOMICS:TNIRYY"
    }
  ],
  "showSymbolLogo": true,
  "colorTheme": "light",
  "isTransparent": false,
  "displayMode": "adaptive",
  "locale": "fr"
}
  </script>
</div>
<!-- TradingView Widget END -->
<br>

    {# Bouton #}
    <div class="d-flex justify-content-end">
    <div class="text-center">
   {% if app.user.role == 'agriculteur' %}      <a class="btn btn-secondary rounded-pill py-2 px-4" href="{{ path('app_annonceinvestissement_new') }}">Ajouter Annonce</a>
        <a class="btn btn-secondary rounded-pill py-2 px-4" href="{{ path('app_negociation_index') }}">Listes des NÃ©gociations</a>
   {%endif%} </div>
    </div>

    
    <!-- Banner Start -->
    <div class="container-xxl py-5">
        <div class="row gx-4">
            {% for annonceinvestissement in pagination %}
                <div class="col-md-6 col-lg-4 col-xl-3 wow fadeInUp" data-wow-delay="0.1s">
                    <div class="product-item">
                        <div class="position-relative">
                            <!-- Your existing code for each announcement -->
                            <img class="img-fluid rounded" src="{{ asset('img/' ~ annonceinvestissement.photo) }}" style="width: 336px; height: 336px; object-fit: cover;">
                            <div class="product-overlay">
                      {% if app.user.role == 'agriculteur' %}           <a class="btn btn-square btn-secondary rounded-circle m-1"
                                    href="{{ path('app_annonceinvestissement_edit', {'idannonce': annonceinvestissement.idannonce}) }}">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <form method="post" action="{{ path('app_annonceinvestissement_delete', {'idannonce': annonceinvestissement.idannonce}) }}" onsubmit="return confirm('Voulez vous vraiment supprimer cette annonce?');">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ annonceinvestissement.idannonce) }}">
                                    <button type="submit" class="btn btn-secondary rounded-circle m-1">
                                         <i class="bi bi-trash"></i>
                                    </button> {%endif%}
                                </form>
                    {% if app.user.role == 'investisseur' %}               <a class="btn btn-square btn-secondary rounded-circle m-1"
                                    href="{{ path('app_negociation_new', {'idannonce': annonceinvestissement.idannonce}) }}">
                                    <i class="bi bi-link"></i>
                                </a>{%endif%}
                   {% if app.user.role == 'agriculteur' %}              <a class="btn btn-square btn-secondary rounded-circle m-1"
                                    href="{{ path('app_negociation_show', {'idannonce': annonceinvestissement.idannonce }) }}">
                                    <i class="bi bi-eye"></i>
                                </a>{%endif%}
                                
                              {% if app.user.role == 'investisseur' %}   <a class="btn btn-square btn-secondary rounded-circle m-1"
                                    href="{{ path('app_annonceinvestissement_show', {'idannonce': annonceinvestissement.idannonce }) }}">
                                    <i class="bi bi-upc-scan"></i>
                                </a>{%endif%}
                            </div>
                        </div>
                        
                            <div class="card-body">
                                <h5 class="card-title">{{ annonceinvestissement.titre }}</h5>
                                <p class="card-text">
                                    <strong style="color: #ffcc00;"></i>Montant:</strong>
                                        {{ annonceinvestissement.montant }} TND<br>
                                <span class="converted-amount" data-original-amount="{{ annonceinvestissement.montant }}">
                                    <i class="bi bi-arrow-repeat"></i> EUR: <span class="converted-amount-eur"></span><br>
                                    <i class="bi bi-arrow-repeat"></i> USD: <span class="converted-amount-usd"></span><br>
                                </span>
                                    <strong style="color: #ffcc00;"><i class="bi bi-calendar"></i>Date de publication:</strong>
                                    {{ annonceinvestissement.datepublication ? annonceinvestissement.datepublication|date('Y-m-d') : '' }}<br>
                                    <strong style="color: #ffcc00;"><i class="bi bi-file-text"></i>Description:</strong>
                                    {{ annonceinvestissement.description }}<br>
                                    <strong style="color: #ffcc00;"><i class="bi bi-geo-alt"></i>Localisation:</strong>
                                    {{ annonceinvestissement.localisation }}<br>
                                </p>
                            </div>
                        
                    </div>
                </div>
            {% else %}
                <p>No records found</p>
            {% endfor %}
        </div>
    </div>
    <!-- Banner End -->
    <!-- Script for currency conversion -->
<script>
    const apiUrl = 'http://apilayer.net/api/live?access_key=62cd0b67e64af4cd8c54f819bcdef722&currencies=EUR,USD&source=TND&format=1';

    // Fetch data from the API
    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            // Get the exchange rates
            const eurToSource = data.quotes['TNDEUR'];
            const usdToSource = data.quotes['TNDUSD'];

            // Loop through each announcement
            document.querySelectorAll('.converted-amount').forEach(element => {
                // Get the original amount for the current iteration
                const originalAmount = parseFloat(element.dataset.originalAmount);

                // Calculate and set converted amounts for the current iteration
                const convertedAmountEur = element.querySelector('.converted-amount-eur');
                const convertedAmountUsd = element.querySelector('.converted-amount-usd');

                convertedAmountEur.innerHTML = (originalAmount * eurToSource).toFixed(2);
                convertedAmountUsd.innerHTML = (originalAmount * usdToSource).toFixed(2);
            });

            console.log("Exchange rates:", data.quotes);
        })
        .catch(error => console.error('Error fetching exchange rates:', error));
</script>
{# Trading #}
<div class="center-container">
  <!-- TradingView Widget BEGIN -->
  <div class="tradingview-widget-container">
    <div class="tradingview-widget-container__widget"></div>
    <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-symbol-overview.js" async>
      {
        "symbols": [
          [
            "ECONOMICS:TNEXP|1D"
          ],
          [
            "ECONOMICS:TNTOT|1D"
          ],
          [
            "ECONOMICS:TNINTR|1D"
          ],
          [
            "ECONOMICS:TNBOT|1D"
          ],
          [
            "ECONOMICS:TNCA|1D"
          ],
          [
            "ECONOMICS:TNCORR|1D"
          ],
          [
            "ECONOMICS:TNCPI|1D"
          ],
          [
            "ECONOMICS:TNIMP|1D"
          ],
          [
            "ECONOMICS:TNPOP|1D"
          ],
          [
            "ECONOMICS:TNUR|1D"
          ],
          [
            "ECONOMICS:TNSSR|1D"
          ],
          [
            "ECONOMICS:TNED|1D"
          ],
          [
            "ECONOMICS:TNGDPA|1D"
          ]
        ],
        "chartOnly": false,
        "width": 1000,
        "height": 500,
        "locale": "fr",
        "colorTheme": "light",
        "autosize": false,
        "showVolume": false,
        "showMA": false,
        "hideDateRanges": false,
        "hideMarketStatus": false,
        "hideSymbolLogo": false,
        "scalePosition": "right",
        "scaleMode": "Normal",
        "fontFamily": "-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif",
        "fontSize": "10",
        "noTimeScale": false,
        "valuesTracking": "1",
        "changeMode": "price-and-percent",
        "chartType": "area",
        "maLineColor": "#2962FF",
        "maLineWidth": 1,
        "maLength": 9,
        "lineWidth": 2,
        "lineType": 0,
        "dateRanges": [
          "1d|1",
          "1m|30",
          "3m|60",
          "12m|1D",
          "60m|1W",
          "all|1M"
        ]
      }
    </script>
  </div>
  <!-- TradingView Widget END -->
</div>

{# Trading #}

<br>
    {# Pagination #}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="text-center">
                {{ knp_pagination_render(pagination) }}
            </div>
        </div>
    </div>

    {# style of pagination #}
<style>
	.pagination {
		display: flex;
		justify-content: center;
		list-style: none;
		padding: 0;
	}

	.pagination li {
		margin: 0 5px;
	}

	.button-container {
		display: flex;
		flex-direction: row;
		overflow-x: auto;
		white-space: nowrap;
	}


	.button-container button {
		margin-right: 10px; /* Espacement entre les boutons */
	}

	.pagination a {
		text-decoration: none;
		padding: 5px 10px;
		border: 1px solid #404a3d; /* Bleu */
		border-radius: 3px;
		color: #404a3d; /* Bleu */
	}

	.pagination a:hover {
		background-color: #404a3d; /* Bleu au survol */
		color: #fff; /* Texte blanc au survol */
	}
    .center-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Adjust the height based on your needs */
  }
</style>

    
    
    <!-- Inclusion de la bibliothÃ¨que QRCode.js -->
    <script type="text/javascript" src="{{ asset('js/qrcodejs-master/qrcode.min.js') }}"></script>

    <!-- ÃlÃ©ment pour afficher le code QR -->
    <div id="mon_qr_code"></div>

    <!-- Script pour gÃ©nÃ©rer le code QR -->
    <script type="text/javascript">
        var qrcode;

        function generateQR(idannonce) {
            // Appel AJAX pour obtenir l'URL du code QR
            fetch("{{ path('app_annonceinvestissement_qrcode', {'idannonce': '__IDANNONCE__'}) }}".replace('__IDANNONCE__', idannonce))
                .then(response => response.json())
                .then(data => {
                    qrcode.clear();
                    qrcode.makeCode(data.qrCodeUrl);
                });
        }

        window.onload = function() {
            qrcode = new QRCode("mon_qr_code", {
                width: 128,
                height: 128
            });
        }
    function deleteAnnouncement(url, csrfToken) {
            if (confirm('Are you sure you want to delete this announcement?')) {
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: '_token=' + csrfToken,
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Handle success, e.g., display a success message
                    console.log(data.message);
                    window.location.reload(); // Reload the page or update the UI as needed
                })
                .catch(error => {
                    // Handle error, e.g., display an error message
                    console.error('There was a problem with the fetch operation:', error);
                });
            }
        }
        // Wait for the DOM to be ready
        document.addEventListener("DOMContentLoaded", function () {
            // Set a timeout to remove the success flash message after 10 seconds
            setTimeout(function () {
                var flashSuccessMessage = document.getElementById("flash-success");
                if (flashSuccessMessage) {
                    flashSuccessMessage.remove();
                }
            }, 10000);

            // Set a timeout to remove the error flash message after 10 seconds
            setTimeout(function () {
                var flashErrorMessage = document.getElementById("flash-error");
                if (flashErrorMessage) {
                    flashErrorMessage.remove();
                }
            }, 10000);
        });
    </script>
    <!-- Banner End -->
{% endblock %}
